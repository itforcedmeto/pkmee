raw `
.set LOCALID_NURSE, 1

MauvilleCity_PokemonCenter_1F_MapScripts::
	map_script MAP_SCRIPT_ON_TRANSITION, MauvilleCity_PokemonCenter_1F_OnTransition
	map_script MAP_SCRIPT_ON_RESUME, CableClub_OnResume
	.byte 0

MauvilleCity_PokemonCenter_1F_OnTransition:
	setrespawn HEAL_LOCATION_MAUVILLE_CITY
	call Common_EventScript_UpdateBrineyLocation
	goto MauvilleCity_PokemonCenter_1F_EventScript_SetMauvilleOldManGfx
	end

MauvilleCity_PokemonCenter_1F_EventScript_SetMauvilleOldManGfx::
	special SetMauvilleOldManObjEventGfx
	end

MauvilleCity_PokemonCenter_1F_EventScript_Nurse::
	setvar VAR_0x800B, LOCALID_NURSE
	call Common_EventScript_PkmnCenterNurse
	waitmessage
	waitbuttonpress
	release
	end

MauvilleCity_PokemonCenter_1F_EventScript_Woman1::
	msgbox MauvilleCity_PokemonCenter_1F_Text_ManOverThereSaysWeirdThings, MSGBOX_NPC
	end

MauvilleCity_PokemonCenter_1F_EventScript_Woman2::
	msgbox MauvilleCity_PokemonCenter_1F_Text_MyDataUpdatedFromRecordCorner, MSGBOX_NPC
	end

MauvilleCity_PokemonCenter_1F_EventScript_Youngster::
	msgbox MauvilleCity_PokemonCenter_1F_Text_RecordCornerSoundsFun, MSGBOX_NPC
	end

MauvilleCity_PokemonCenter_1F_Text_ManOverThereSaysWeirdThings:
	.string "That man over there, he says weird\n"
	.string "things!\p"
	.string "He's funny in a weird way.\n"
	.string "I doubt I'll forget about him!$"

MauvilleCity_PokemonCenter_1F_Text_MyDataUpdatedFromRecordCorner:
	.string "When I accessed the RECORD CORNER,\n"
	.string "the data for what's hot in DEWFORD\l"
	.string "got updated.\p"
	.string "Now that bit of data is the same\n"
	.string "as my friend's!$"

MauvilleCity_PokemonCenter_1F_Text_RecordCornerSoundsFun:
	.string "A RECORD CORNER opened upstairs in\n"
	.string "the POKéMON CENTER.\p"
	.string "I don't know what it's about, but it\n"
	.string "sounds fun. I'll go check it out!$"

`
script Generic_FreeMoveReminder {
	lockall
	faceplayer
	msgbox(format("I am the MOVE MASTER! Shall I teach your POKéMON a move?"), MSGBOX_YESNO)
	if (var(VAR_RESULT) == NO) {
		goto(MoveRelearner_Bye)
	} else {
		goto(MoveRelearner_Choose)
	}
	releaseall
	end

MoveRelearner_Choose:
	special(ChooseMonForMoveRelearner)
	waitstate
	if(var(VAR_0x8004) == PARTY_NOTHING_CHOSEN) {
		goto(MoveRelearner_Bye)
	}
	special(IsSelectedMonEgg)
	if(var(VAR_RESULT) == TRUE) {
		goto(MoveRelearner_NoEggs)
	} elif(var(VAR_0x8005) == FALSE) { // CB2_ChooseMonForMoveRelearner sets gSpecialVar_0x8005 to # of moves the selected mon can learn - 0 = FALSE
		goto(MoveRelearner_NoMoves)
	}
	special(TeachMoveRelearnerMove)
	waitstate
	if(var(VAR_0x8004) == FALSE) { // TeachMoveRelearnerMove sets this to FALSE if the player backs out after getting to 'teach a move' screen
		goto(MoveRelearner_Bye)
	} else {
		msgbox(format("Be sure to come back and teach more moves to your POKéMON!")) // otherwise mon has successfully learnt a move
		releaseall
		end
	}

MoveRelearner_Bye:
	msgbox(format("Come back soon!"))
	releaseall
	end

MoveRelearner_NoEggs:
	msgbox(format("I may be the MOVE MASTER, but I can't teach an EGG any moves!"))
	goto(MoveRelearner_Choose)

MoveRelearner_NoMoves:
	msgbox(format("Impossible! I can't teach this POKéMON any moves!"))
	goto(MoveRelearner_Choose)
}