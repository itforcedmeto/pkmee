raw `
.set LOCALID_NURSE, 1

MauvilleCity_PokemonCenter_1F_MapScripts::
	map_script MAP_SCRIPT_ON_TRANSITION, MauvilleCity_PokemonCenter_1F_OnTransition
	map_script MAP_SCRIPT_ON_RESUME, CableClub_OnResume
	.byte 0

MauvilleCity_PokemonCenter_1F_OnTransition:
	setrespawn HEAL_LOCATION_MAUVILLE_CITY
	call Common_EventScript_UpdateBrineyLocation
	goto MauvilleCity_PokemonCenter_1F_EventScript_SetMauvilleOldManGfx
	end

MauvilleCity_PokemonCenter_1F_EventScript_SetMauvilleOldManGfx::
	special SetMauvilleOldManObjEventGfx
	end

MauvilleCity_PokemonCenter_1F_EventScript_Nurse::
	setvar VAR_0x800B, LOCALID_NURSE
	call Common_EventScript_PkmnCenterNurse
	waitmessage
	waitbuttonpress
	release
	end

MauvilleCity_PokemonCenter_1F_EventScript_Woman1::
	msgbox MauvilleCity_PokemonCenter_1F_Text_ManOverThereSaysWeirdThings, MSGBOX_NPC
	end

MauvilleCity_PokemonCenter_1F_EventScript_Woman2::
	msgbox MauvilleCity_PokemonCenter_1F_Text_MyDataUpdatedFromRecordCorner, MSGBOX_NPC
	end

MauvilleCity_PokemonCenter_1F_EventScript_Youngster::
	msgbox MauvilleCity_PokemonCenter_1F_Text_RecordCornerSoundsFun, MSGBOX_NPC
	end

MauvilleCity_PokemonCenter_1F_Text_ManOverThereSaysWeirdThings:
	.string "That man over there, he says weird\n"
	.string "things!\p"
	.string "He's funny in a weird way.\n"
	.string "I doubt I'll forget about him!$"

MauvilleCity_PokemonCenter_1F_Text_MyDataUpdatedFromRecordCorner:
	.string "When I accessed the RECORD CORNER,\n"
	.string "the data for what's hot in DEWFORD\l"
	.string "got updated.\p"
	.string "Now that bit of data is the same\n"
	.string "as my friend's!$"

MauvilleCity_PokemonCenter_1F_Text_RecordCornerSoundsFun:
	.string "A RECORD CORNER opened upstairs in\n"
	.string "the POKÃ©MON CENTER.\p"
	.string "I don't know what it's about, but it\n"
	.string "sounds fun. I'll go check it out!$"

`
script Generic_FreeMoveReminder {
	lock
	msgbox(format("i am the move tutor, i will teach your pokemon a move they previously knew"))
	special(ChooseMonForMoveRelearner)
	if(var(VAR_0x8004) == PARTY_NOTHING_CHOSEN) {
		msgbox(format("come back later"))
	}
	special(IsSelectedMonEgg)
	if(var(VAR_RESULT) == TRUE) {
		msgbox(format("can't teach egg"))
	} elif(var(VAR_0x8005) == FALSE) {
		msgbox(format("no moves to teach"))
	}
	special(TeachMoveRelearnerMove)
	waitstate
	if(var(VAR_0x8004) == 0) {
		msgbox(format("come back???"))
	} else {
		msgbox(format("see you!"))
	}
	release
	end
}

//script Generic_FreeMoveReminder {
//	lock
//	msgbox(format("i am the move tutor, i will teach your pokemon a move they previously knew"))
//	special(ChooseMonForMoveRelearner)
//	if(var(VAR_0x8004) == PARTY_NOTHING_CHOSEN) {
//		msgbox(format("come back later"))
//	} else {
//		special(IsSelectedMonEgg)
//		if(var(VAR_RESULT) == TRUE) {
//			msgbox(format("can't teach egg"))
//		} elif(var(VAR_0x8005) == FALSE) {
//			msgbox(format("no moves to teach"))
//		}
//		special(TeachMoveRelearnerMove)
//		waitstate
//		if(var(VAR_0x8004) == 0) {
//			msgbox(format("oh that's too bad, see you next time"))
//		} else {
//			msgbox(format("teach more of your pokemon moves!"))
//		}
//	}
//	release
//	end
//}